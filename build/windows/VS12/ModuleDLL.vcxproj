<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\..\libmodule\confval.c" />
    <ClCompile Include="..\..\..\libmodule\log.c" />
    <ClCompile Include="..\..\..\libmodule\stdpaths.c" />
    <ClCompile Include="..\..\..\libmodule\string.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\..\libmodule\include\libarmadito\armadito.h" />
    <ClInclude Include="..\..\..\libmodule\include\libarmadito\confval.h" />
    <ClInclude Include="..\..\..\libmodule\include\libarmadito\info.h" />
    <ClInclude Include="..\..\..\libmodule\include\libarmadito\log.h" />
    <ClInclude Include="..\..\..\libmodule\include\libarmadito\module.h" />
    <ClInclude Include="..\..\..\libmodule\include\libarmadito\status.h" />
    <ClInclude Include="..\..\..\libmodule\include\libarmadito\stdpaths.h" />
    <ClInclude Include="..\..\..\libmodule\include\libarmadito\string.h" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{8A108A73-1029-45C1-AC8D-993025690CB2}</ProjectGuid>
    <RootNamespace>libarmadito</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="ArmaditoBuildDefines.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="ArmaditoBuildDefines.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="ArmaditoBuildDefines.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="ArmaditoBuildDefines.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <IncludePath>$(A6oInclude);$(A6oRoot)armadito-core;$(A6oRoot)armadito-core\libmodule\include;$(IncludePath)</IncludePath>
    <LibraryPath>$(GlibLib);$(JsoncLib);$(LibraryPath)</LibraryPath>
    <OutDir>$(A6oOut)</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\$(Platform)\$(Configuration)\obj\</IntDir>
    <TargetName>ArmaditoModule</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>$(A6oInclude);$(A6oRoot)core\libarmadito\include\config;$(A6oRoot)core\libarmadito\src;$(A6oRoot)core\libarmadito\src\windows;$(IncludePath)</IncludePath>
    <LibraryPath>$(GlibLib);$(JsoncLib);$(LibraryPath)</LibraryPath>
    <OutDir>$(A6oOut)</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\$(Platform)\$(Configuration)\obj</IntDir>
    <TargetName>Armadito</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <IncludePath>$(A6oInclude);$(A6oRoot)armadito-core;$(A6oRoot)armadito-core\libmodule\include;$(IncludePath)</IncludePath>
    <LibraryPath>$(GlibLib);$(JsoncLib);$(LibraryPath)</LibraryPath>
    <OutDir>$(A6oOut)</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\$(Platform)\$(Configuration)\obj\</IntDir>
    <TargetName>ArmaditoMod</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>$(A6oInclude);$(A6oRoot)core\libarmadito\include\config;$(A6oRoot)core\libarmadito\src;$(A6oRoot)core\libarmadito\src\windows;$(IncludePath)</IncludePath>
    <LibraryPath>$(GlibLib);$(JsoncLib);$(LibraryPath)</LibraryPath>
    <OutDir>$(A6oOut)</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\$(Platform)\$(Configuration)\obj</IntDir>
    <TargetName>Armadito</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(GlibInclude);$(JsoncInclude);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>$(GlibLibraries);urlmon.lib;shlwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ModuleDefinitionFile>
      </ModuleDefinitionFile>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent>
      <Command>echo post-build step for $(ProjectName) -  Copying files to $(TargetDir)


REM copy the conf file

REM if not exist "$(TargetDir)conf" mkdir "$(TargetDir)conf"

REM xcopy "$(A6oRoot)\core\libarmadito\conf\armadito.conf"  "$(TargetDir)conf" /D /I /Y

REM if errorlevel 1 goto BuildEventFailed



REM copy the include files

if not exist "$(TargetDir)include\libarmadito" mkdir "$(TargetDir)include\libarmadito"

if errorlevel 1 goto BuildEventFailed

xcopy /i /y $(A6oRoot)armadito-core\libmodule\include\libarmadito\*.h $(TargetDir)include\libarmadito

if errorlevel 1 goto BuildEventFailed



REM copy the glib DLLs

xcopy "$(GlibBin)glib-2-vs12.dll"  "$(TargetDir)" /D /I /Y

if errorlevel 1 goto BuildEventFailed

xcopy "$(GlibBin)gmodule-2-vs12.dll"  "$(TargetDir)" /D /I /Y

if errorlevel 1 goto BuildEventFailed

xcopy "$(GlibBin)gthread-2-vs12.dll"  "$(TargetDir)" /D /I /Y

if errorlevel 1 goto BuildEventFailed

xcopy "$(A6oDeps)libintl\lib\libintl3.dll" "$(TargetDir)" /D /I /Y

if errorlevel 1 goto BuildEventFailed

xcopy "$(A6oDeps)libiconv\lib\libiconv2.dll" "$(TargetDir)" /D /I /Y

if errorlevel 1 goto BuildEventFailed



REM Exit properly because the build will not fail 

REM unless the final step exits with an error code


goto BuildEventOK



:BuildEventFailed

echo post-build step for $(ProjectName) FAILED

exit 1



:BuildEventOK

echo post-build step for $(ProjectName) OK
</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy files to target directory</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(GlibInclude);$(JsoncInclude);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>$(GlibLibraries);urlmon.lib;json-c.lib;shlwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ModuleDefinitionFile>ArmaditoLibrary.def</ModuleDefinitionFile>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent>
      <Command>echo post-build step for $(ProjectName) -  Copying files to $(TargetDir)

REM copy the conf file
if not exist "$(TargetDir)conf" mkdir "$(TargetDir)conf"
xcopy "$(A6oRoot)\core\libarmadito\conf\armadito.conf"  "$(TargetDir)conf" /D /I /Y
if errorlevel 1 goto BuildEventFailed

REM copy the include files
if not exist "$(TargetDir)include" mkdir "$(TargetDir)include"
xcopy /i /y $(A6oRoot)core\libarmadito\include\libarmadito.h $(TargetDir)include
if errorlevel 1 goto BuildEventFailed
xcopy /i /y $(A6oRoot)core\libarmadito\include\libarmadito\*.h $(TargetDir)include\libarmadito
if errorlevel 1 goto BuildEventFailed

REM copy the glib DLLs
xcopy "$(GlibBin)glib-2-vs12.dll"  "$(TargetDir)" /D /I /Y
if errorlevel 1 goto BuildEventFailed
xcopy "$(GlibBin)gmodule-2-vs12.dll"  "$(TargetDir)" /D /I /Y
if errorlevel 1 goto BuildEventFailed
xcopy "$(GlibBin)gthread-2-vs12.dll"  "$(TargetDir)" /D /I /Y
if errorlevel 1 goto BuildEventFailed
xcopy "$(A6oDeps)libintl\lib\libintl3.dll" "$(TargetDir)" /D /I /Y
if errorlevel 1 goto BuildEventFailed
xcopy "$(A6oDeps)libiconv\lib\libiconv2.dll" "$(TargetDir)" /D /I /Y
if errorlevel 1 goto BuildEventFailed

REM Exit properly because the build will not fail 
REM unless the final step exits with an error code

goto BuildEventOK

:BuildEventFailed
echo post-build step for $(ProjectName) FAILED
exit 1

:BuildEventOK
echo post-build step for $(ProjectName) OK
</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy files to target directory</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(GlibInclude);$(JsoncInclude);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ModuleDefinitionFile>
      </ModuleDefinitionFile>
      <AdditionalDependencies>$(GlibLibraries);urlmon.lib;shlwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent>
      <Command>echo post-build step for $(ProjectName) -  Copying files to $(TargetDir)


REM copy the conf file

REM if not exist "$(TargetDir)conf" mkdir "$(TargetDir)conf"

REM xcopy "$(A6oRoot)\core\libarmadito\conf\armadito.conf"  "$(TargetDir)conf" /D /I /Y

REM if errorlevel 1 goto BuildEventFailed



REM copy the include files

if not exist "$(TargetDir)include\libarmadito" mkdir "$(TargetDir)include\libarmadito"

if errorlevel 1 goto BuildEventFailed

xcopy /i /y $(A6oRoot)armadito-core\libmodule\include\libarmadito\*.h $(TargetDir)include\libarmadito

if errorlevel 1 goto BuildEventFailed



REM copy the glib DLLs

xcopy "$(GlibBin)glib-2-vs12.dll"  "$(TargetDir)" /D /I /Y

if errorlevel 1 goto BuildEventFailed

xcopy "$(GlibBin)gmodule-2-vs12.dll"  "$(TargetDir)" /D /I /Y

if errorlevel 1 goto BuildEventFailed

xcopy "$(GlibBin)gthread-2-vs12.dll"  "$(TargetDir)" /D /I /Y

if errorlevel 1 goto BuildEventFailed

xcopy "$(A6oDeps)libintl\lib\libintl3.dll" "$(TargetDir)" /D /I /Y

if errorlevel 1 goto BuildEventFailed

xcopy "$(A6oDeps)libiconv\lib\libiconv2.dll" "$(TargetDir)" /D /I /Y

if errorlevel 1 goto BuildEventFailed



REM Exit properly because the build will not fail 

REM unless the final step exits with an error code


goto BuildEventOK



:BuildEventFailed

echo post-build step for $(ProjectName) FAILED

exit 1



:BuildEventOK

echo post-build step for $(ProjectName) OK
</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy files to target directory</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(GlibInclude);$(JsoncInclude);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ModuleDefinitionFile>ArmaditoLibrary.def</ModuleDefinitionFile>
      <AdditionalDependencies>$(GlibLibraries);urlmon.lib;json-c.lib;shlwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent>
      <Command>echo post-build step for $(ProjectName) -  Copying files to $(TargetDir)

REM copy the conf file
REM if not exist "$(TargetDir)conf" mkdir "$(TargetDir)conf"
REM xcopy "$(A6oRoot)\core\libarmadito\conf\armadito.conf"  "$(TargetDir)conf" /D /I /Y
REM if errorlevel 1 goto BuildEventFailed

REM copy the include files
if not exist "$(TargetDir)include" mkdir "$(TargetDir)include"
xcopy /i /y $(A6oRoot)core\libarmadito\include\libarmadito.h $(TargetDir)include
if errorlevel 1 goto BuildEventFailed
xcopy /i /y $(A6oRoot)core\libarmadito\include\libarmadito\*.h $(TargetDir)include\libarmadito
if errorlevel 1 goto BuildEventFailed

REM copy the glib DLLs
xcopy "$(GlibBin)glib-2-vs12.dll"  "$(TargetDir)" /D /I /Y
if errorlevel 1 goto BuildEventFailed
xcopy "$(GlibBin)gmodule-2-vs12.dll"  "$(TargetDir)" /D /I /Y
if errorlevel 1 goto BuildEventFailed
xcopy "$(GlibBin)gthread-2-vs12.dll"  "$(TargetDir)" /D /I /Y
if errorlevel 1 goto BuildEventFailed
xcopy "$(A6oDeps)libintl\lib\libintl3.dll" "$(TargetDir)" /D /I /Y
if errorlevel 1 goto BuildEventFailed
xcopy "$(A6oDeps)libiconv\lib\libiconv2.dll" "$(TargetDir)" /D /I /Y
if errorlevel 1 goto BuildEventFailed

REM Exit properly because the build will not fail 
REM unless the final step exits with an error code

goto BuildEventOK

:BuildEventFailed
echo post-build step for $(ProjectName) FAILED
exit 1

:BuildEventOK
echo post-build step for $(ProjectName) OK
</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>copy files to target directory</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>